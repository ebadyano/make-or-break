/*
 * This is a minimalistic Gradle build script to demonstrate proper integration with JMH. JMH includes corresponding
 * Maven build scripts in the example project; see http://hg.openjdk.java.net/code-tools/jmh/file/86072ed4c056/jmh-samples/pom.xml
 */

//see https://github.com/johnrengelman/shadow
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

version = '0.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8


// emulate scope 'provided' in Gradle - see http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/
configurations {
    provided
    provided.extendsFrom(compile)
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

repositories {
    mavenCentral()
}

ext.jmhVersion = '1.21'

dependencies {
    compile "org.openjdk.jmh:jmh-core:$jmhVersion"
    provided "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
}

idea {
    module {
        // support provided scope in IDEA:
        // See also http://www.gradle.org/docs/current/dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html
        scopes.PROVIDED.plus += [configurations.provided]
        //avoid duplicate entries in provided scope (i.e. jmh-core)
        //scopes.PROVIDED.minus += [configurations.compile]
        //scopes.COMPILE.plus += [configurations.compile]
        downloadSources = true
    }
}

jar {
    manifest {
        attributes("Main-Class": "org.openjdk.jmh.Main")
    }
}

wrapper {
    gradleVersion = '5.5'
}
